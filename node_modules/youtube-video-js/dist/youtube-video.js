/*!
  * Youtube-video-js v3.6.1
  * https://github.com/markcellus/youtube-video-js
  *
  * Copyright (c) 2022 Mark
  * Licensed under the MIT license
 */

let t=function(t){return t?"string"==typeof t&&(t=[t]):t=[],t};const e=new class{constructor(){this._head=document.getElementsByTagName("head")[0],this._cssPaths={},this._scriptMaps={},this._dataPromises={}}async loadScript(e){let s,r,i=[];return(e=t(e)).forEach((t=>{r=this._scriptMaps[t]=this._scriptMaps[t]||{},r.promise||(r.path=t,r.promise=new Promise((e=>{s=this.createScriptElement(),s.setAttribute("type","text/javascript"),s.src=t,s.addEventListener("load",e),this._head.appendChild(s)}))),i.push(r.promise)})),Promise.all(i)}async unloadScript(e){let s;return new Promise((r=>{(e=t(e)).forEach((t=>{s=this._head.querySelectorAll('script[src="'+t+'"]')[0],s&&(this._head.removeChild(s),delete this._scriptMaps[t])})),r()}))}createScriptElement(){return document.createElement("script")}async fetchData(t,e={}){let s=t+JSON.stringify(e);if(e.cache=void 0===e.cache||e.cache,!t)return Promise.resolve();if(!this._dataPromises[s]||!e.cache)try{this._dataPromises[s]=await fetch(t,e)}catch(t){throw this._dataPromises[s]=null,t}return this._dataPromises[s]}async loadCss(e){return new Promise((s=>{(e=t(e)).forEach((t=>{if(!this._cssPaths[t]){let e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href",t),this._head.appendChild(e),this._cssPaths[t]=e}})),s()}))}async unloadCss(e){let s;return new Promise((r=>{(e=t(e)).forEach((t=>{s=this._cssPaths[t],s&&(this._head.removeChild(s),this._cssPaths[t]=null)})),r()}))}async loadTemplate(t,e){if(!t)return Promise.resolve();const s=await this.fetchTemplate(t);return e?(e.innerHTML=s,e):s}async fetchTemplate(t){const e=await fetch(t);return await e.text()}async flush(){await this.unloadCss(Object.getOwnPropertyNames(this._cssPaths)),this._cssPaths={};for(let t in this._scriptMaps)if(this._scriptMaps.hasOwnProperty(t)){let e=this._scriptMaps[t];await this.unloadScript(e.path)}this._scriptMaps={},this._dataPromises={}}},s=new Map;class r extends HTMLElement{static scriptLoadPromise=null;static triggerYoutubeIframeAPIReady=null;ytPlayer;paused=!0;ytPlayerContainer=void 0;resolveBuildPlayerPromise=null;ytPlayerPromise=null;scriptPath="https://www.youtube.com/iframe_api";mediaError=void 0;constructor(){super(),s.set(this,this.id)}connectedCallback(){this.ytPlayerContainer=this.createYTPlayerElement(),this.appendChild(this.ytPlayerContainer),this.ytPlayerContainer.style.display="block",this.load()}disconnectedCallback(){s.delete(this),this.resolveBuildPlayerPromise&&this.resolveBuildPlayerPromise(),this.ytPlayer&&this.ytPlayer.destroy(),s.size||(s.clear(),this.unloadYTScript())}get height(){return Number(this.getAttribute("height"))}get width(){return Number(this.getAttribute("width"))}get src(){return this.getAttribute("src")}get autoplay(){return this.hasAttribute("autoplay")}get playsinline(){return this.hasAttribute("playsinline")}get id(){return this.getAttribute("id")||`ytPlayer-${s.size}`}get controls(){return this.hasAttribute("controls")||!0}get ytPlayerVars(){const{srcQueryParams:t}=this;return t.autoplay=this.autoplay?1:0,t.controls=this.controls?1:0,t.playsinline=this.playsinline?1:0,t.origin=window.location.origin,t}get srcQueryParams(){const t=this.src.split("?")[1]||"";if(!t)return{};const e=t.split("&"),s={};for(const t of e){const e=t.split("=",2);1===e.length?s[e[0]]="":s[e[0]]=decodeURIComponent(e[1].replace(/\+/g," "))}return s}async load(){return await this.loadYTScript(),this.ytPlayer=await this.buildPlayer(),this.ytPlayer}get videoId(){const t=new RegExp("https?:\\/\\/(?:[0-9A-Z-]+\\.)?(?:youtu\\.be\\/|youtube(?:-nocookie)?\\.com\\S*[^\\w\\s-])([\\w-]{11})(?=[^\\w-]|$)(?![?=&+%\\w.-]*(?:['\"][^<>]*>|<\\/a>))[?=&+%\\w.-]*","ig");return this.src.replace(t,"$1")}play(){this.paused=!1,this.src?this.ytPlayer&&this.ytPlayer.playVideo():this.error=new Error("you cannot call play() method on a video element that has no youtube source url")}pause(){this.ytPlayer&&this.ytPlayer.pauseVideo()}createYTPlayerElement(){return document.createElement("div")}onPlay(){this.paused=!1,s.forEach(((t,e)=>{e===this||e.paused||e.pause()})),this.dispatchEvent(new CustomEvent("play"))}onPause(){this.paused=!0}onEnd(){this.paused=!0}set error(t){const{message:e}=t;throw this.dispatchEvent(new ErrorEvent(e)),this.mediaError=t,t}get error(){return this.mediaError}_onYTApiStateChange(t){const e={"-1":"unstarted",0:"ended",1:"playing",2:"pause",3:"buffering",5:"cued"}[t.data.toString()],s={ended:this.onEnd,pause:this.onPause,playing:this.onPlay};if(s[e]){const t=s[e];t&&(t.call(this),this.dispatchEvent(new CustomEvent(e)))}}loadYTScript(){return r.scriptLoadPromise||(r.scriptLoadPromise=new Promise((t=>(window.onYouTubeIframeAPIReady||(r.triggerYoutubeIframeAPIReady=t,window.onYouTubeIframeAPIReady=()=>{window.onYouTubeIframeAPIReady=null,r.triggerYoutubeIframeAPIReady()}),e.loadScript(this.scriptPath))))),r.scriptLoadPromise}unloadYTScript(){e.unloadScript(this.scriptPath),r.scriptLoadPromise=null}buildPlayer(){return this.ytPlayerPromise||(this.ytPlayerPromise=new Promise((t=>{const e={events:{onError:()=>{this.error=new Error("player could not be built")},onReady:e=>{this.dispatchEvent(new CustomEvent("loadstart")),this.dispatchEvent(new CustomEvent("canplay")),this.resolveBuildPlayerPromise=t,t(e.target)},onStateChange:t=>this._onYTApiStateChange(t)},height:this.height,playerVars:this.ytPlayerVars,videoId:this.videoId,width:this.width};this.ytPlayer=new YT.Player(this.ytPlayerContainer,e)}))),this.ytPlayerPromise}}customElements.define("youtube-video",r);export{r as YoutubeVideoElement};
